{"version":3,"sources":["components/HeadBar/HeadBar.js","components/ConnectFooter/ConnectFooter.js","components/CrossHairs/CrossHairs.js","components/PreviewPane/PreviewPane.js","components/ProjectTile/ProjectTile.js","components/PageHome/PageHome.js","components/PageAboutMe/PageAboutMe.js","components/PageProject/PageProjectTemplate.js","components/Page404/Page404.js","components/App/App.js","serviceWorker.js","index.js"],"names":["HeadBar","props","react_default","a","createElement","react_router_dom","to","className","style","height","Nav_default","ConnectFooter","id","index_esm","size","onClick","window","open","links","github","ti_index_esm","linkedin","CrossHairs","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","svgWidth","svgHeight","state","xPos","yPos","xOffset","yOffset","mouseOnScreen","e","setState","clientX","clientY","_this2","hoveredRect","onMouseMove","handleMouseMove","bind","onMouseEnter","onMouseLeave","children","width","position","left","top","zIndex","CrossHairs_CrossHairSVG","stroke","strokeWidth","sep","React","Component","CrossHairSVG","d","idleLine","fill","index","halfH","halfW","concat","PreviewPane","project","alt","src","github_url","img","ProjectTile","componentDidMount","setBoundingRect","addEventListener","boundingRect","redirect","animation","undefined","selector","createRef","assertThisInitialized","handleTileClick","titleNoSpaces","title","replace","react_router","pathname","match","url","handleTileEnter","handleTileExit","ref","date","tags","map","tag","key","length","toLowerCase","PageHome","projects","projectHovered","document","projectEntered","CrossHairs_CrossHairs","tileHovered","ProjectTile_ProjectTile_ProjectTile","components_PreviewPane_PreviewPane","PageAboutMe","AXPendula","lazy","Promise","all","__webpack_require__","then","OrBit","HorizonsStudio","PageProjectTemplate","projectTitle","params","pages","ProjectComp","react","fallback","SyncLoader_default","css","marginRight","marginBottom","sizeUnit","color","loading","RES_DIR","dir","Page404","App","components_HeadBar_HeadBar","exact","path","component","components_ConnectFooter_ConnectFooter","Boolean","location","hostname","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89360ca0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HeadBar.css';\r\n\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst HeadBar = (props) => (\r\n    <div>\r\n        <Link to={'/'}>\r\n            <div className='titleText'>A</div>\r\n        </Link>\r\n        <div style={{ height: '40px' }} />\r\n\r\n        <Nav>\r\n            {/* <Nav.item> */}\r\n                {/* <Link to={'/AboutMe'}> */}\r\n                    {/* <Nav.Link>About Me</Nav.Link> */}\r\n                {/* </Link> */}\r\n            {/* </Nav.item> */}\r\n        </Nav>\r\n    </div>\r\n\r\n)\r\n\r\nexport default HeadBar;","import React from 'react';\r\n\r\nimport { GoMarkGithub } from 'react-icons/go';\r\nimport { TiSocialLinkedin } from 'react-icons/ti';\r\n\r\nimport links from '../../data/links.json';\r\n\r\nimport \"./ConnectFooter.css\"\r\n\r\nconst ConnectFooter = (props) => {\r\n\r\n    let iconSize = 35;\r\n\r\n    return (\r\n        <div id=\"container\">\r\n            <div>\r\n                <GoMarkGithub\r\n                    className=\"footer-icon\"\r\n                    size={iconSize}\r\n                    onClick={() => window.open(links.github)} />\r\n                <TiSocialLinkedin\r\n                    className='footer-icon'\r\n                    size={iconSize}\r\n                    onClick={() => window.open(links.linkedin)} />\r\n            </div>\r\n            <div>\r\n                <p className=\"footer-text\">\r\n                    Designed and built by me, using React.js\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ConnectFooter;\r\n\r\n","import React from 'react';\r\n\r\n// Class for mouse tracking cross hair graphic.\r\nexport default class CrossHairs extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.svgWidth = 20;\r\n        this.svgHeight = 20;\r\n\r\n        this.state = {\r\n            xPos: 0,\r\n            yPos: 0,\r\n            xOffset: -this.svgWidth / 2,\r\n            yOffset: -this.svgHeight / 2,\r\n            mouseOnScreen: false\r\n        }\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        this.setState({\r\n            xPos: e.clientX,\r\n            yPos: e.clientY,\r\n            svgWidth: this.svgWidth,\r\n            svgHeight: this.svgWidth\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let rect = this.props.hoveredRect;\r\n\r\n        return (\r\n            <div\r\n                onMouseMove={this.handleMouseMove.bind(this)}\r\n                onMouseEnter={() => this.setState({ mouseOnScreen: true })}\r\n                onMouseLeave={() => this.setState({ mouseOnScreen: false })}\r\n            >\r\n                {this.props.children}\r\n\r\n                {/* Check whether mouse is on screen. */}\r\n                {this.state.mouseOnScreen ?\r\n                    // Check if tile is being hovered over\r\n                    // this.props.tileHovered >= 0 ?\r\n                    true ?\r\n                        // IF NOT HOVERED OVER\r\n                        <svg height={this.svgWidth} width={this.svgHeight} style={{\r\n                            position: 'fixed',\r\n                            left: this.state.xPos + this.state.xOffset,\r\n                            top: this.state.yPos + this.state.yOffset,\r\n                            zIndex: -99\r\n                        }}>\r\n                            <CrossHairSVG\r\n                                stroke=\"black\"\r\n                                strokeWidth=\"0.3\"\r\n                                sep={3}\r\n                                svgWidth={this.svgWidth}\r\n                                svgHeight={this.svgHeight} />\r\n                        </svg>\r\n                        :\r\n                        // IF HOVERED OVER\r\n                        <svg height={rect.height} width={rect.width} style={{\r\n                            position: 'fixed',\r\n                            left: rect.left,\r\n                            top: rect.top,\r\n                            zIndex: 99\r\n                        }}>\r\n                            <CrossHairSVG\r\n                                stroke=\"black\"\r\n                                strokeWidth=\"5\"\r\n                                sep={3}\r\n                                svgWidth={rect.width}\r\n                                svgHeight={rect.height} />\r\n                        </svg>\r\n\r\n                    : <div />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst CrossHairSVG = (props) => (\r\n    <g>\r\n        <path id=\"lineAB\" d={idleLine(0, props.sep, props.svgWidth, props.svgHeight)} stroke={props.stroke}\r\n            strokeWidth={props.strokeWidth} fill=\"none\" />\r\n        <path id=\"lineAB\" d={idleLine(1, props.sep, props.svgWidth, props.svgHeight)} stroke={props.stroke}\r\n            strokeWidth={props.strokeWidth} fill=\"none\" />\r\n        <path id=\"lineAB\" d={idleLine(2, props.sep, props.svgWidth, props.svgHeight)} stroke={props.stroke}\r\n            strokeWidth={props.strokeWidth} fill=\"none\" />\r\n        <path id=\"lineAB\" d={idleLine(3, props.sep, props.svgWidth, props.svgHeight)} stroke={props.stroke}\r\n            strokeWidth={props.strokeWidth} fill=\"none\" />\r\n    </g>\r\n)\r\n\r\nfunction idleLine(index, sep, svgWidth, svgHeight) {\r\n    let halfH = svgHeight / 2;\r\n    let halfW = svgWidth / 2;\r\n\r\n    switch (index) {\r\n        case 0:\r\n            return `M ${svgWidth} ${halfH - sep} L ${halfW + sep} ${halfH - sep} L ${halfW + sep} 0`;\r\n        case 1:\r\n            return `M ${svgWidth} ${halfH + sep} L ${halfW + sep} ${halfH + sep} L ${halfW + sep} ${svgHeight}`;\r\n        case 2:\r\n            return `M 0 ${halfH + sep} L ${halfW - sep} ${halfH + sep} L ${halfW - sep} ${svgHeight}`;\r\n        case 3:\r\n            return `M 0 ${halfH - sep} L ${halfW - sep} ${halfH - sep} L ${halfW - sep} 0`;\r\n        default:\r\n            return '';\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './PreviewPane.css'\r\n\r\nconst RES_DIR = 'resources/projects';\r\n\r\nconst PreviewPane = (props) => {\r\n\r\n    if (props.project !== null) {\r\n        return (\r\n                <img\r\n                    id='image'\r\n                    alt='Project Preview'\r\n                    src={`${props.github_url}/${RES_DIR}/${props.project.img}`} />\r\n        )\r\n\r\n    } else return null;\r\n}\r\n\r\nexport default PreviewPane;","import React from 'react';\r\nimport './ProjectTile.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class ProjectTile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            boundingRect: null,\r\n            redirect: false\r\n        }\r\n\r\n        this.animation = (props.animation === undefined ? true : this.animation);\r\n\r\n        // Reference for finding bounding box.\r\n        this.selector = React.createRef();\r\n\r\n        // BINDINGS\r\n        this.setBoundingRect = this.setBoundingRect.bind(this);\r\n        this.handleTileClick = this.handleTileClick.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setBoundingRect();\r\n\r\n        window.addEventListener(\"resize\", () => this.setBoundingRect());\r\n    };\r\n\r\n    setBoundingRect() {\r\n        // this.setState({\r\n        //     boundingRect: this.selector.current.getBoundingClientRect()\r\n        // })\r\n    }\r\n\r\n    handleTileClick() {\r\n        if (this.animation) {\r\n\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let project = this.props.project;\r\n        let titleNoSpaces = project.title.replace(/\\s/g, '');\r\n\r\n        if (this.state.redirect) {\r\n            return (\r\n                <Redirect to={{\r\n                    pathname: `${this.props.match.url}Projects/${titleNoSpaces}`,\r\n\r\n                    // Attempt to supply project state to component\r\n                    // state: {\r\n                    //     message: 'Hello Alex',\r\n                    //     messageB : 3\r\n                    // }\r\n                }} />\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={this.animation ? \"tile\" : \"tile_noAnimation\"}\r\n                    onMouseEnter={() => (this.props.handleTileEnter(project))}\r\n                    onMouseLeave={() => (this.props.handleTileExit())}\r\n                    onClick={() => this.handleTileClick(project)}\r\n                    ref={this.selector}\r\n                >\r\n                    <div id=\"date\">{project.date}</div>\r\n                    {/* <Link to={`${this.props.match.url}Projects/${titleNoSpaces}`} >\r\n                    </Link> */}\r\n                    <div id={this.animation ? \"title\" : \"title_noAnimation\"}>\r\n                        {project.title}\r\n                    </div>\r\n\r\n                    {project.tags.map((tag, index) => (\r\n                        <p className=\"tag\" key={index}>\r\n                            {index === project.tags.length - 1 ?\r\n                                `${tag}`.toLowerCase()\r\n                                : `${tag}, `.toLowerCase()}\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n// import Autoresponsive from 'autoresponsive-react'\r\n\r\nimport CrossHairs from '../CrossHairs/CrossHairs';\r\nimport PreviewPane from '../PreviewPane/PreviewPane';\r\nimport ProjectTile from '../ProjectTile/ProjectTile';\r\n\r\nimport projects from '../../data/projects.json';\r\n\r\nimport './PageHome.css'\r\n\r\nclass PageHome extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      github_url: 'https://raw.githubusercontent.com/alexdgourlay/alexgourlay.com/master/alexgourlay_com',\r\n      projects: [],\r\n      projectHovered: null,\r\n    }\r\n\r\n    this.handleTileEnter = this.handleTileEnter.bind(this);\r\n    this.handleTileExit = this.handleTileExit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    document.title = `AG Portfolio - Home`;\r\n\r\n    // Load Project data into state.\r\n    this.setState({\r\n      projects: projects\r\n    })\r\n\r\n  }\r\n\r\n  handleTileEnter(project) {\r\n    this.setState({\r\n      projectHovered: project,\r\n      projectEntered: true,\r\n    })\r\n  }\r\n\r\n  handleTileExit() {\r\n    this.setState({\r\n      projectHovered: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"PageHome\">\r\n        <CrossHairs\r\n          tileHovered={this.state.projectHovered} >\r\n\r\n          <div id=\"main_body\">\r\n            <div className=\"tileGrid\">\r\n              {\r\n                this.state.projects.map((project) => (\r\n                  <div className=\"tileGridElement\" key={project.id}>\r\n                    <ProjectTile\r\n                      key={project.id}\r\n                      project={project}\r\n                      match={this.props.match}\r\n                      handleTileEnter={this.handleTileEnter}\r\n                      handleTileExit={this.handleTileExit} />\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n            <div id=\"preview-container\">\r\n              <PreviewPane\r\n                github_url={this.state.github_url}\r\n                project={this.state.projectHovered} />\r\n            </div>\r\n          </div>\r\n        </CrossHairs>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageHome;\r\n","import React from 'react';\r\n\r\nclass PageAboutMe extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageAboutMe;","import React, { lazy, Suspense } from 'react';\r\nimport SyncLoader from 'react-spinners/SyncLoader';\r\n\r\nimport ProjectTile from '../ProjectTile/ProjectTile.js';\r\n\r\nimport './PageProject.css'\r\n\r\nimport projects from '../../data/projects.json';\r\nimport links from '../../data/links.json';\r\n\r\nconst AXPendula = lazy(() => import('./PageProjects/PageProject_0_AXPendula'));\r\nconst OrBit = lazy(() => import('./PageProjects/PageProject_1_OrBit'));\r\nconst HorizonsStudio = lazy(() => import('./PageProjects/PageProject_2_HorizonsStudio'));\r\n\r\nconst PageProjectTemplate = (props) => {\r\n\r\n    const projectTitle = props.match.params.projectTitle;\r\n\r\n    document.title = `AG Portfolio - ${projectTitle}`;\r\n\r\n    const pages = {\r\n        AXPendula: [0, AXPendula],\r\n        OrBit: [1, OrBit],\r\n        HorizonsStudio: [2, HorizonsStudio]\r\n    }\r\n\r\n    const ProjectComp = pages[projectTitle][1];\r\n    const project = projects[pages[projectTitle][0]];\r\n\r\n    return (\r\n        <Suspense\r\n            fallback=\r\n            {\r\n                <div>\r\n                    <SyncLoader\r\n                        css={{ position: 'fixed', top: '50%', left: '50%', marginRight: '100px', marginBottom: '50px' }}\r\n                        sizeUnit={'px'}\r\n                        size={10}\r\n                        color={'#676767'}\r\n                        loading={true} />\r\n                </div>\r\n            }>\r\n            <div id=\"project-main-body\">\r\n                <ProjectTile\r\n                    key={project.id}\r\n                    project={project}\r\n                    match={props.match}\r\n                    animation={false}\r\n                    handleTileEnter={() => { }}\r\n                    handleTileExit={() => { }}\r\n                />\r\n                <ProjectComp\r\n                    project={project}\r\n                    RES_DIR={`${links['github_dir']}/${project.dir}`} />\r\n            </div>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\n// const LoadingScreen = (props) => {\r\n\r\n//     return (\r\n//         <div\r\n//             style=\"position:fixed;top:50%;left:50%\">\r\n//             <Spinner\r\n//                 animation=\"grow\" />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nexport default PageProjectTemplate;","import React from 'react';\r\n\r\nconst Page404 = (props) => {\r\n\r\n    return (\r\n\r\n        <h1>404 Error, page not found! Have a nice day :)</h1>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport HeadBar from '../HeadBar/HeadBar';\r\nimport ConnectFooter from '../ConnectFooter/ConnectFooter.js';\r\n\r\nimport PageHome from '../PageHome/PageHome';\r\nimport PageAboutMe from '../PageAboutMe/PageAboutMe';\r\nimport PageProjectTemplate from '../PageProject/PageProjectTemplate';\r\nimport Page404 from '../Page404/Page404'\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <HeadBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PageHome} />\r\n          <Route exact path=\"/AboutMe\" component={PageAboutMe} />\r\n          <Route path=\"/Projects/:projectTitle\" exact component={PageProjectTemplate} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n        <ConnectFooter />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport App from './components/App/App'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}